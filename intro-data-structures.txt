1. A line of people at an amusement park ride.

   -The line is composed of members, represented as strings.
   -There is a front to the line, as well as a back.
   -When someone enters the line, place them at the end.
   -People may leave the line whenever they see fit, and those behind them take their place.

Given the above real-world information, use an array data structure to code the following solution.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.
c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).
d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?
e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?
f) If Patrick wants to leave the line, how would you delete him from the array?


Code:

a) var lineOfPeople = ['Vivian','Ava','Josh','Patrick','Mike'];


b) var addMary = lineOfPeople.push('Mary');


c) function justJosh (){
     return lineOfPeople.indexOf('Josh');
   }


d) function checkForEmily(){
     if(lineOfPeople.includes('Emily')){
       return 'Emily'
     }
     else
    {
      return "She ain't here, dude."
    }
  }


e) function addMelissa(){
     let cutIn = lineOfPeople.indexOf("Ava");
     lineOfPeople.splice(cutIn, 0, "Melissa");
     return lineOfPeople;
   }


f) function goodByePat(){
     var leavePat = lineOfPeople.indexOf("Patrick");
     lineOfPeople.splice(leavePat, 1); 
     return lineOfPeople;
   }


2. Provide another real-world example that you can model using a data structure.

	A great example of a real world data structure can be a grocery line. In data structure terms, this is called a queue, and it is designed to flow in a 	way that allows for first in, first out. Meaning, that as a new element(shopper) is added to the end of the line, all the elements(shoppers) before it 	will have to be removed before the added element can receive service. 



3. How would your data structure allow developers to access and manipulate the data?

	They could access the data through calling the functions made that already manipulate the data. 