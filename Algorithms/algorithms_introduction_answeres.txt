/////////Exercises///////


1. Using proper pseudo-code, describe the following primitive algorithms:

- Making coffee (how I do it);
  
  PC: 	
	PROGRAM MakeCuppaJoe:

	  FILL kettle THEN
	    TURN-ON kettle
	  TARE-SCALE
	  WEIGH coffee THEN
	    GRIND
	  PLACE filter THEN
	    WET filter THEN
	      PLACE groundBeans
	  TARE-SCALE
	  POUR water UNTIL
            water.weight == coffee.weight * 16
	
	END
		


- Washing dishes;

  PC:	PROGRAM WashDishes:
	
	  INITIATE hotWater
	  RINSE dirtyDish THEN
	    PLACE inDishWasher 
	  REPEAT rinseDish UNTIL
	    dirtyDish == 0
	  IF dirtyDish == 0 THEN
	    RUN dishWasher && TURN-OFF hotWater
	  END IF
	 END
	    

- A choice of your own (eating pizza).

  PC:	PROGRAM eatZa:
	
	  FOR EACH bite
	    wholeSlice = wholeSlice - bite
	      IF wholeSlice = 0 THEN INITIATE grabNotherSlice
	  WHILE wholeZa = hasSlices THEN 
	    grabNotherSlice
	  IF wholeZa == 0 THEN 
	    RETURN sadness

	END
	    


2. As with the knot algorithm, there may be more than one way to solve the problem. It is essential to try to pick the best algorithm for a situation. Name three companies who created an algorithm that made them successful, e.g., Google's search algorithm. It doesn't need to be a tech example (such as a recipe or manufacturing a product). Google's algorithm produces more relevant results than other search engines; what about each of your cases make them stand out?

	-1. McDonald's. They standardized their menu and food items down to a science.

	-2. Subway. Same as McDonald's but with sandwiches.

	-3. Uber. You request and Ã¼ber, get picked up then dropped off where you want to go. 



3 Hypothesize about what constitutes an efficient algorithm versus an inefficient algorithm.

Answer: What makes an algorithm efficient over inefficient is an algorithm that, firstly, does its best stay simple and DRY. It is repeatable and functions within a finite amount of time that is predictable. Namely, the process needs to be a sequence of logical steps. It needs to accomplish the desired end result, and it needs to do so in the amount of time allotted. 

